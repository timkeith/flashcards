{"version":3,"sources":["components/DeckPicker.jsx","components/Config.js","components/ScoreTable.jsx","components/Flashcard.jsx","data/words.js","App.js","index.js"],"names":["Checkbox","_ref","label","isChecked","onChange","React","createElement","className","type","name","checked","DeckPicker","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleSelectAll","decks","deck","state","setState","handleBegin","doBegin","getSelected","reverseQAndA","words","_inherits","_createClass","key","value","_this2","selected","_this3","result","push","_this4","id","onClick","handleSelectDeselectAll","Object","entries","map","x","handleChange","disabled","areAnyChecked","Component","MAX_SCORE","SCORES","ScoreTable","scores","questions","rows","i","s","colSpan","reverse","row","word","j","Flashcard","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","showAnswer","doEvaluation","v","_this$props","question","answer","hidden","delta","title","e","Words","Avere","Fare","Essere","Volere","Potere","Dovere","Preposizioni","Numeri","pickWord","buckets","count","n","Math","pow","sum","reduce","y","prob","r","random","console","log","currentWord","floor","undefined","App","_toConsumableArray","oldScore","newScore","max","min","d1","d2","answers","list","haveBegun","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d185e31.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Checkbox = ({ label, isChecked, onChange }) => (\n  <div className='Checkbox'>\n    <label>\n      <input\n        type='checkbox'\n        name={label}\n        checked={isChecked}\n        onChange={onChange}\n      />\n      {label}\n    </label>\n  </div>\n);\n\nclass DeckPicker extends Component {\n\n  constructor(props) {\n    super(props);\n    var decks = {};\n    for (const deck in props.words) {\n      decks[deck] = false;\n    }\n    this.state = {\n      decks: decks,\n      reverseQAndA: false,\n    };\n  }\n\n  handleChange(key) {\n    return () => {\n      var decks = this.state.decks;\n      decks[key] = !decks[key];\n      this.setState({ decks: decks });\n    }\n  }\n\n  handleSelectAll = () => {\n    var decks = {};\n    for (const deck in this.state.decks) {\n      decks[deck] = true;\n    }\n    this.setState({ decks: decks });\n  }\n\n  handleSelectDeselectAll(selected) {\n    return () => {\n      var decks = {};\n      for (const deck in this.state.decks) {\n        decks[deck] = selected;\n      }\n      this.setState({ decks: decks });\n    };\n  }\n\n  areAnyChecked() {\n    for (const deck in this.state.decks) {\n      if (this.state.decks[deck]) return true;\n    }\n    return false;\n  }\n\n  getSelected() {\n    var result = [];\n    for (const deck in this.state.decks) {\n      if (this.state.decks[deck]) result.push(deck);\n    }\n    return result;\n  }\n\n  handleBegin = () => {\n    this.props.doBegin(this.getSelected(), this.state.reverseQAndA);\n  };\n\n  render() {\n    return (\n      <div id='DeckPicker'>\n        <h1>Choose Decks to Study</h1>\n        <button\n          className='btn btn-primary m-2'\n          onClick={this.handleSelectDeselectAll(true)}>\n          Select All\n        </button>\n        <button\n          className='btn btn-primary m-2'\n          onClick={this.handleSelectDeselectAll(false)}>\n          Deselect All\n        </button>\n        {\n          Object.entries(this.state.decks).map((x) => (\n            <Checkbox\n              label={x[0]}\n              key={x[0]}\n              isChecked={x[1]}\n              onChange={this.handleChange(x[0])}\n            />\n          ))\n        }\n        <button\n          className='btn btn-primary m-2'\n          disabled={!this.areAnyChecked()}\n          onClick={this.handleBegin}>\n          Begin\n        </button>\n        <label className='reverse-checkbox'>\n          <input\n            type='checkbox'\n            name='reverse'\n            checked={this.state.reverseQAndA}\n            onChange={() => { this.setState({ reverseQAndA: !this.state.reverseQAndA}) }}\n          />\n          Reverse questions and answers\n        </label>\n      </div>\n    );\n  }\n\n}\n\nexport default DeckPicker;\n","const MAX_SCORE = 4;\nconst SCORES = [0, 1, 2, 3, 4];\n\nexport { MAX_SCORE, SCORES };\n","import React from 'react';\nimport { MAX_SCORE, SCORES } from './Config';\n\nconst ScoreTable = ({ scores, questions }) => {\n  const rows = SCORES.map((i) => ([]));\n  scores.map((s, i) => rows[s].push(questions[i]));\n  return (\n    <div id='ScoreTable'>\n      <table>\n        <tbody>\n          <tr><td className='level' colSpan='2'>Knowledge level:</td></tr>\n          {\n            rows.reverse().map((row, i) => (\n                <tr key={i}>\n                  <td className='level'>Level&nbsp;{MAX_SCORE - i}:</td>\n                  <td>\n                  {\n                    row.map((word, j) => (\n                      <span key={j} className='nowrap'>{(j > 0 ? \", \" : \"\") + word}</span>\n                    ))\n                  }\n                  </td>\n                </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ScoreTable;\n","import React, { Component } from 'react';\n\nclass Flashcard extends Component {\n  state = {\n    showAnswer: false,\n  };\n\n  doEvaluation = (v) => {\n    this.setState({showAnswer: false});\n    this.props.doEvaluation(v);\n  };\n\n  render() {\n    const { question, answer } = this.props;\n    const evaluations = [\n      { delta: -1, className: 'btn-danger',  title: 'Not at all' },\n      { delta:  0, className: 'btn-warning', title: 'A little' },\n      { delta: +1, className: 'btn-success', title: 'Very well' },\n    ];\n\n    return (\n      <div id='Flashcard'>\n        <div>\n          <div className='language'>Domanda:</div>\n          <div className='word'>{question}</div>\n        </div>\n        <div>\n          <div className='language'>Riposta:</div>\n          <div className='word' hidden={!this.state.showAnswer}>\n            {answer}\n          </div>\n        </div>\n        <div className='evaluate'>\n          <div className='language' hidden={this.state.showAnswer}>\n          </div>\n          <div className='word' hidden={this.state.showAnswer}>\n            <button\n              className='btn btn-primary m-2'\n              onClick={() => { this.setState({showAnswer: true}) }}>\n              Show\n            </button>\n          </div>\n          <div className='language' hidden={!this.state.showAnswer}>\n            <div className='smaller'>How well did you know it?</div>\n          </div>\n          <div className='word' hidden={!this.state.showAnswer}>\n            {evaluations.map((e) => (\n              <button\n                key={e.delta}\n                className={`btn ${e.className} m-2`}\n                title={e.title}\n                onClick={() => { this.doEvaluation(e.delta); }}>\n                {e.delta > 0 ? \"+\" : e.delta < 0 ? \"-\" : \"0\"}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Flashcard;\n","const Words = {\n  'Avere': [\n    'avere', 'to have',\n    '(avere) io', '(avere) ho',\n    '(avere) tu', '(avere) hai',\n    '(avere) lui/lei', '(avere) ha',\n    '(avere) noi', '(avere) abbiamo',\n    '(avere) voi', '(avere) avete',\n    '(avere) loro', '(avere) hanno',\n  ],\n  'Fare': [\n    'fare', 'to do/make',\n    '(fare) io', '(fare) faccio',\n    '(fare) tu', '(fare) fai',\n    '(fare) lui/lei', '(fare) fa',\n    '(fare) noi', '(fare) facciamo',\n    '(fare) voi', '(fare) fate',\n    '(fare) loro', '(fare) fanno',\n  ],\n  'Essere': [\n    'I am', 'io sono',\n    'you are', 'tu sei',\n    'he/she is', 'lui/lei è',\n    'we are', 'noi siamo',\n    'you all are', 'voi siete',\n    'they are', 'loro sono',\n  ],\n  'Volere': [\n    'I want', 'io voglio',\n    'you want', 'tu vuoi',\n    'he/she wants', 'lui/lei vuole',\n    'we want', 'noi vogliamo',\n    'you all want', 'voi volete',\n    'they want', 'loro vogliono',\n  ],\n  'Potere': [\n    'I can', 'io posso',\n    'you can', 'tu puoi',\n    'he/she can', 'lui/lei può',\n    'we can', 'noi possiamo',\n    'you all can', 'voi potete',\n    'they can', 'loro possono',\n  ],\n  'Dovere': [\n    'I must', 'io devo',\n    'you must', 'tu devi',\n    'he/she must', 'lui/lei deve',\n    'we must', 'noi dobbiamo',\n    'you call must', 'voi dovete',\n    'they must', 'loro devono',\n  ],\n  'Preposizioni': [\n    'to/at', 'a',\n    'of', 'di',\n    'from', 'da',\n    'in', 'in',\n    'on', 'su',\n    'with', 'con',\n    'for', 'per',\n  ],\n  'Numeri': [\n    'one', 'uno',\n    'two', 'due',\n    'three', 'tre',\n    'four', 'quattro',\n    'five', 'cinque',\n    'six', 'sei',\n    'seven', 'sette',\n    'eight', 'otto',\n    'nine', 'nove',\n    'ten', 'dieci',\n  ],\n};\nexport default Words;\n","import React, { Component } from 'react';\nimport DeckPicker from './components/DeckPicker';\nimport ScoreTable from './components/ScoreTable';\nimport Flashcard from './components/Flashcard';\nimport { MAX_SCORE, SCORES } from './components/Config';\nimport Words from './data/words.js';\n\nconst SCALE = 4;  // each bucket is SCALE times as likely as the next\n\n// Pick a word at random\nconst pickWord = (buckets, scores) => {\n  const count = buckets.map((n, i) => (n * SCALE**(MAX_SCORE - i)));\n  const sum = count.reduce((x, y) => x + y, 0);\n  const prob = count.map((n) => (n / sum));\n  var r = Math.random();\n  console.log('r:', r, '  prob:', prob);\n  var s = 0;\n  for (; s < buckets.length; ++s) {\n    r -= prob[s];\n    if (r < 0) break;\n  }\n  var j = Math.floor(Math.random() * buckets[s]);\n  var currentWord;\n  for (var i = 0; i < scores.length; ++i) {\n    if (scores[i] === s) {\n      if (j === 0) {\n        currentWord = i;\n        break;\n      }\n      j -= 1;\n    }\n  }\n  //console.log('currentWord:', currentWord);\n  if (currentWord === undefined) {\n    console.log('currentWord undefined');\n    console.log(`want element ${j} of ${buckets[s]} from bucket ${s}`);\n  }\n  return currentWord;\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      haveBegun: false,\n      questions: [],  // i -> question in lang1\n      answers:   [],  // i -> answer in lang2\n      scores:    [],  // i -> score for that pair\n      buckets:   [],  // score -> number with that score\n    };\n  }\n\n  doEvaluation = (delta) => {\n    let scores = [...this.state.scores];\n    const oldScore = scores[this.state.currentWord];\n    const newScore = Math.max(0, Math.min(MAX_SCORE, oldScore + delta));\n    scores[this.state.currentWord] = newScore;\n    let buckets = [...this.state.buckets];\n    buckets[oldScore] -= 1;\n    buckets[newScore] += 1;\n    const currentWord = pickWord(buckets, scores);\n    this.setState({ currentWord: currentWord, scores: scores, buckets: buckets });\n  };\n\n  doBegin = (decks, reverse) => {\n    const d1 = reverse ? 1 : 0;\n    const d2 = reverse ? 0 : 1;\n    var questions = [];\n    var answers = [];\n    var scores = [];\n    for (var j = 0; j < decks.length; ++j) {\n      const list = Words[decks[j]];\n      for (var i = 0; i < list.length; i += 2) {\n        questions.push(list[i+d1]);\n        answers.push(list[i+d2]);\n        scores.push(0);\n      }\n    }\n    var buckets = [...SCORES];\n    buckets[0] = questions.length;\n    this.setState({\n      haveBegun:   true,\n      decks:       decks,\n      questions:   questions,\n      answers:     answers,\n      scores:      scores,\n      buckets:     buckets,\n      currentWord: Math.floor(Math.random() * questions.length),\n    });\n  }\n\n  render() {\n    if (!this.state.haveBegun) {\n      return (\n        <DeckPicker words={Words} doBegin={this.doBegin} />\n      );\n    } else {\n      const question = this.state.questions[this.state.currentWord];\n      const answer = this.state.answers[this.state.currentWord];\n      return (\n        <>\n          <Flashcard\n            question={question}\n            answer={answer}\n            doEvaluation={this.doEvaluation}\n          />\n          <ScoreTable\n            scores={this.state.scores}\n            questions={this.state.questions}\n          />\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}